#!/bin/bash

#LOG="install-$(date +%d-%H%M%S).log"

echo ""
echo "         #####################################################"
echo "         #                     BIENVENIDO!                   #"
echo "         #####################################################"
echo ""
printf "\n"

# Continuar
read -n1 -rep "Te gustaria iniciar la instalacion? (s/n) " instalar
if [[ $instalar =~ ^[Ss]$ ]]; then
    printf "Bien, iniciando la instalacion..."
else
    printf "No se realizo la instalacion. Hasta luego!!!"
    exit
fi

#Limpiar pantalla.
clear

# Instalando el sistema base.
echo "Instalando el sistema base..."
read -n1 -rep "Te gustaria instalar los paquetes? (s/n)" pqts
if [[ $pqts =~ ^[Ss]$ ]]; then
    pacstrap /mtn base base-devel linux-zen linux-firmware intel-ucode nano   
else
    printf "El sistema base no sera instalado.\n"
fi

sleep 3
#Limpiar pantalla.
clear

# Creando archivo fstab.
echo ""
echo "Creando archivo fstab..."
sleep 3
genfstab -U /mnt >> /mnt/etc/fstab
cat /mnt/etc/fstab
sleep 3

#Habilitando servicio necesario para discos SSD.
echo ""
echo "Habilitando servicio necesario para discos SSD..."
sleep 3
arch-chroot /mnt /bin/bash -c "systemctl enable fstrim.timer"

# Zona horaria.
echo "Configurando la zona horaria..."
arch-chroot /mnt /bin/bash -c "ln -sf /usr/share/zoneinfo/America/Hermosillo /etc/localtime"
arch-chroot /mnt /bin/bash -c "hwclock --systohc"
sleep 3
clear

# Idioma del sistema.
echo -e "\t\t\t| Idioma del Sistema |"
echo "es_MX.UTF-8 UTF-8" > /mnt/etc/locale.gen
arch-chroot /mnt /bin/bash -c "locale-gen" 
echo "LANG=es_MX.UTF-8" > /mnt/etc/locale.conf
cat /mnt/etc/locale.gen
echo ""
cat /mnt/etc/locale.conf
sleep 4
clear

# Establecer distribucion del teclado.
echo "KEYMAP=us" > /mnt/etc/vconsole.conf 
cat /mnt/etc/vconsole.conf
sleep 4
clear

#Agregando el hostname.
read -p "Cual seria el hostname? " hostname
echo "$hostname" > /mnt/etc/hostname
cat /mnt/etc/hostname
sleep 4
clear

echo "Configurando el localdomain..."
echo -e "127.0.0.1   localhost \n ::1   localhost \n 127.0.1.1   $hostname.localdomain   $hostname" > /mnt/etc/hosts
cat /mnt/etc/hosts
sleep 4

#Configurar el password para root.
echo "Configurando el password para root..."
arch-chroot /mnt /bin/bash -c "passwd"
sleep 4
clear


read -n1 -rep "Te gustaria instalar paquetes necesarios para los dispositivos? (s/n)" maspaquetes
if [[ $maspaquetes =~ ^[Ss]$ ]]; then
    for paquete in efibootmgr networkmanager wireless_tools wpa_supplicant dialog os-prober mtools dosfstools linux-zen-headers ntfs-3g xdg-user-dirs bluez bluez-utils openssh htop wget iwd smartmontools xdg-utils git; do
        arch-chroot /mnt /bin/bash -c "pacman -S --no-confirm $paquete"
        if [ $? -ne 0 ]; then
            echo -e "$paquete instalacion ha fallado, por favor revisa el archivo: install.log"
            exit 1
    	fi
    done	
else
  printf "Los paquetes no seran instalados.\n"
fi

sleep 4
clear

read -n1 -rep "Te gustaria instalar el controlador de audio pipewire? (s/n)" audio
if [[ $audio =~ ^[Ss]$ ]]; then
    for controler in pipewire pipewire-alsa pipewire-jack pipewire-pulse gst-plugin-pipewire libpulse wireplumber; do
        arch-chroot /mnt /bin/bash -c "pacman -S --no-confirm $controler"
        if [ $? -ne 0 ]; then
            echo -e "$controler instalacion ha fallado, por favor revisa el archivo: install.log"
            exit 1
    	fi
    done	
else
  printf "Pipewire no sera instalado.\n"
fi

sleep 4
clear

echo "Habilitando el servicio NetworkManager..."
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"

echo "Habilitando el servicio bluetooth..."
arch-chroot /mnt /bin/bash -c "systemctl enable bluetooth"

echo "Habilitando el servicio archlinux keyring..."
arch-chroot /mnt /bin/bash -c "systemctl enable archlinux-keyring-wkd-sync.timer"

read -p "Ingrese el nombre de usuario nuevo:" usuario
arch-chroot /mnt /bin/bash -c "useradd -mG wheel $usuario"
sleep 4
clear
echo "Escriba su contraseÃ±a nueva..."
arch-chroot /mnt /bin/bash -c "passwd $usuario"
clear

#Permisos de super usuario al grupo wheel.
sed -i 's/# %wheel/%wheel/' /mnt/etc/sudoers
cat /mnt/etc/sudoers
sleep 4
clear

#Habilitando repositorio multilib.
sed -i 's/#[multilib]/[multilib]/g' /mnt/etc/pacman.conf
sed -i "s/#Include = /mnt/etc/pacman.d/mirrorlist/Include = /mnt/etc/pacman.d/mirrorlist/g" /mnt/etc/pacman.conf

echo "Instalando el boot loader..."
arch-chroot /mnt /bin/bash -c "bootctl --path=/boot install"

echo -e "default arch-* \n timeout 0 \n #console-mode keep" > /mnt/boot/loader/loader.conf
cat /mnt/boot/loader/loader.conf

echo -e "title Arch Linux \n linux \vmlinuz-linux-zen \n initrd \intel-ucode.img \n initrd \initramfs-linux-zen.img \n options root=/dev/nvme0n1p6 rw" > /mnt/boot/loader/entries/arch.conf
cat /mnt/boot/loader/entries/arch.conf
sleep 4
clear

read -n1 -rep "Te gustaria reiniciar el sistema? (s/n)" rboot
if [[ $rboot =~ ^[Ss]$ ]]; then
    umount -R /mnt
    reboot
else
    echo "Saliendo del script..."
    exit
fi
