#!/bin/bash

LOG="install-$(date +%d-%H%M%S).log"

echo ""
echo "         #####################################################"
echo "         #                     BIENVENIDO!                   #"
echo "         #####################################################"
echo ""
printf "\n"

# Continuar
read -n1 -rep "Te gustaria iniciar la instalacion? (s/n) " PROCEED
    echo
if [[ $PROCEED =~ ^[Ss]$ ]]; then
    printf "\n%s  Bien, iniciando la instalacion!.\n"
else
    printf "\n%s  No se realizo la instalacion. Hasta luego!!!\n"
    exit
fi

#Limpiar pantalla.
clear

# Instalando el sistema base.
echo ""
echo "Instalando el sistema base...\n"
read -n1 -rep "Te gustaria instalar los paquetes? (s/n)" pqts
echo
if [[ $pqts =~ ^[Ss]$ ]]; then
    pacstrap /mtn base base-devel linux-zen linux-firmware intel-ucode nano   
else
    printf "El sistema base no sera instalado.\n"
fi

# Creando archivo fstab.
echo "Creando archivo fstab..."
echo ""
sleep 3
genfstab -U /mnt >> /mnt/etc/fstab

#Entrando en modo chroot.
echo "Entrando en modo chroot..."
echo ""
sleep 3
arch-chroot /mnt

#Habilitando servicio necesario para discos SSD.
echo "Habilitando servicio necesario para discos SSD..."
echo ""
sleep 3
systemctl enable fstrim.timer

ln -sf /usr/share/zoneinfo/America/Hermosillo /etc/localtime

hwclock -w

# Editar locole.gen
sed -i '14s/#//' /etc/locale.gen

locale-gen

echo "LANG=es_MX.UTF-8" >> /etc/locale.conf

echo "KEYMAP=us" >> /etc/vconsole.conf

#Agregando el hostname
read -n1 -rep "Cual seria el hostname?" hostname
echo "$hostname" >> /etc/hostname
#echo "archlinux" >> /etc/hostname

echo "127.0.0.1      localhost\n::1      localhost\n127.0.1.1      $hostname.localdomain      $hostname" >> /etc/hosts

#Configurar el password para root.
#read -p "Introduce la clave de Root/Administrador: " rootpasswd
passwd

read -n1 -rep "Te gustaria instalar paquetes necesarios para los dispositivos? (s/n)" maspaquetes
echo
    if [[ $maspaquetes =~ ^[Ss]$ ]]; then
        for paqute in efibootmgr networkmanager wireless_tools wpa_supplicant dialog os-prober mtools dosfstools linux-zen-headers ntfs-3g xdg-user-dirs bluez bluez-utils openssh htop wget iwd smartmontools xdg-utils; do
          pacman -S "$paquete" 2>&1 | tee -a "$LOG"
          if [ $? -ne 0 ]; then
             echo -e "$paquete instalacion ha fallado, por favor revisa el archivo: install.log"
             exit 1
    	  fi
        done
    fi	
else
  printf "Los paquetes no seran instalados.\n"
fi

read -n1 -rep "Te gustaria instalar el controlador de audio pipewire? (s/n)" audio
echo
    if [[ $audio =~ ^[Ss]$ ]]; then
        for controler in pipewire pipewire-alsa pipewire-jack pipewire-pulse gst-plugin-pipewire libpulse wireplumber; do
          pacman -S "$controler" 2>&1 | tee -a "$LOG"
            if [ $? -ne 0 ]; then
                echo -e "$controler instalacion ha fallado, por favor revisa el archivo: install.log"
                exit 1
    	    fi
        done
    fi	
else
  printf "Pipewire no sera instalado.\n"
fi

systemctl enable NetworkManager

systemctl enable bluetooth

systemctl enable archlinux-keyring-wkd-sync.timer

useradd -mG wheel mokitos

passwd mokitos

#Permisos de super usuario al grupo wheel.
sed -i '14s/#//' /etc/sudoers
